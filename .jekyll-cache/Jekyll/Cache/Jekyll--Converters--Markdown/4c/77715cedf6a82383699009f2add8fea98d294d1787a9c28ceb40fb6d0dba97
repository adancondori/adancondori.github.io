I"…+<h1 id="notes-git-spanish">Notes Git (Spanish)</h1>

<h2 id="configuraci√≥n-de-git">Configuraci√≥n de Git</h2>

<p><strong>Primer paso: Generar tus llaves SSH</strong>. Recuerda que es muy buena idea proteger tu llave privada con una contrase√±a.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"youremail@example.com"</span>
</code></pre></div></div>

<p><strong>Segundo paso</strong>: Terminar de configurar nuestro sistema.</p>

<p><strong>En Windows y Linux</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Encender el "servidor" de llaves SSH de tu computadora:</span>
<span class="nb">eval</span> <span class="si">$(</span>ssh-agent <span class="nt">-s</span><span class="si">)</span>

<span class="c"># A√±adir tu llave SSH a este "servidor":</span>
ssh-add ruta-donde-guardaste-tu-llave-privada
</code></pre></div></div>

<p><strong>En Mac</strong>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Encender el "servidor" de llaves SSH de tu computadora:</span>
<span class="nb">eval</span> <span class="s2">"</span><span class="si">$(</span>ssh-agent <span class="nt">-s</span><span class="si">)</span><span class="s2">"</span>

<span class="c"># Si usas una versi√≥n de OSX superior a Mac Sierra (v10.12)</span>
<span class="c"># debes crear o modificar un archivo "config" en la carpeta</span>
<span class="c"># de tu usuario con el siguiente contenido (ten cuidado con</span>
<span class="c"># las may√∫sculas):</span>
Host <span class="k">*</span>
				<span class="nv">IPQoS</span><span class="o">=</span>throughput <span class="c">## this line is optional in diferents version on mac</span>
        AddKeysToAgent <span class="nb">yes
        </span>UseKeychain <span class="nb">yes
        </span>IdentityFile ruta-donde-guardaste-tu-llave-privada

<span class="c"># A√±adir tu llave SSH al "servidor" de llaves SSH de tu</span>
<span class="c"># computadora (en caso de error puedes ejecutar este</span>
<span class="c"># mismo comando pero sin el argumento -K):</span>
ssh-add <span class="nt">-K</span> ruta-donde-guardaste-tu-llave-privada
</code></pre></div></div>

<h2 id="ejemplo">Ejemplo</h2>

<p>Usando git</p>

<p><img src="/images/post/git_multiuserflow.png" alt="git_multiuserflow" /></p>

<h2 id="comandos-de-ayuda">Comandos de ayuda</h2>

<p>Como volver atr√°s despu√©s de hacer un <strong>git add .</strong></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nb">.</span> // or git add name_file
</code></pre></div></div>

<p>luego borramos los cambios desde el staging</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git <span class="nb">rm </span>name_file
git <span class="nb">rm</span>  <span class="nt">--cached</span> name_file
</code></pre></div></div>

<p>Como comparar el historial de un archivo modificado</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log
git diff hash1 hash2
</code></pre></div></div>

<p>Como volver commit anterior</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset <span class="nb">hash</span> <span class="nt">--hard</span>
</code></pre></div></div>

<p>Mostrar todos los log y diferencias</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log <span class="nt">--stat</span>
</code></pre></div></div>

<p>Crear alias para mostrar gr√°fico en consola</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">arbolito</span><span class="o">=</span><span class="s2">"git log --all --graph --decorate --oneline"</span>
</code></pre></div></div>

<h2 id="manejo-de-tags">Manejo de Tags</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Creaci√≥n de tagg</span>
git tag <span class="nt">-a</span> nametag <span class="nt">-m</span> <span class="s2">"mensaje personalizado referente del tag"</span> hashcommit
<span class="c"># Sube todos los tags creados</span>
git push origin <span class="nt">--tags</span>
<span class="c"># Borra Tags locales</span>
git tag <span class="nt">-d</span> nametag
<span class="c"># Borrar Tags de los repositorios remotos</span>
git push origin :refs/tags/tagName 
</code></pre></div></div>

<p>Delete Tag</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git tag <span class="nt">-d</span>
</code></pre></div></div>

<h2 id="buscar-palabras-en-archivos-y-commit">Buscar palabras en archivos y commit</h2>

<ul>
  <li><strong><code class="highlighter-rouge">git grep color</code></strong> ‚Äì&gt; use la palabra color</li>
  <li><strong><code class="highlighter-rouge">git grep la</code></strong> ‚Äì&gt; donde use la palabra la</li>
  <li><strong><code class="highlighter-rouge">git grep -n color</code></strong> ‚Äì&gt; en que lineas use la palabra color</li>
  <li><strong><code class="highlighter-rouge">git grep -n platzi</code></strong> ‚Äì&gt; en que lineas use la palabra platzi</li>
  <li><strong><code class="highlighter-rouge">git grep -c la</code></strong> ‚Äì&gt; cuantas veces use la palabra la</li>
  <li><strong><code class="highlighter-rouge">git grep -c paltzi</code></strong> ‚Äì&gt; cuantas veces use la palabra platzi</li>
  <li><strong><code class="highlighter-rouge">git grep -c ‚Äú&lt;p&gt;‚Äù</code></strong> ‚Äì&gt; cuantas veces use la etiqueta &lt;p&gt;</li>
  <li><strong><code class="highlighter-rouge">git log-S ‚Äúcabecera‚Äù</code></strong> ‚Äì&gt; cuantas veces use la palabra cabecera en
todos los commits.</li>
  <li><strong><code class="highlighter-rouge">grep</code></strong> ‚Äì&gt; para los archivos`</li>
  <li><strong><code class="highlighter-rouge">log</code></strong> -&gt; para los commits.</li>
</ul>

<h2 id="comandos-colaborativos">Comandos colaborativos</h2>

<ul>
  <li><strong><code class="highlighter-rouge">git shortlog</code></strong>: Ver cuantos commits a hecho los miembros del equipo</li>
  <li><strong><code class="highlighter-rouge">git shortlog -sn</code></strong>: Las personas que han hecho ciertos commits</li>
  <li><strong><code class="highlighter-rouge">git shortlog -sn --all</code></strong>: Todos los commits (tambi√©n los borrados)</li>
  <li><strong><code class="highlighter-rouge">git shortlog -sn --all --no-merges</code></strong>: muestra las estadisticas de los comigs del repositorio donde estoy</li>
  <li><strong><code class="highlighter-rouge">git config --global alias.stats ‚Äúshortlog -sn --all --no-merges‚Äù</code></strong>: configura el comando ‚Äúshortlog -sn ‚Äìall ‚Äìno-merges‚Äù en un Alias en las configuraciones globales de git del pc</li>
  <li><strong><code class="highlighter-rouge">git blame -c blogpost.html</code></strong>: Muestra quien ha hecho cambios en dicho archivo identado</li>
  <li><strong><code class="highlighter-rouge">git blame --help</code></strong>: Muestra en el navegador el uso del comando</li>
  <li><strong><code class="highlighter-rouge">git blame archivo -L 35, 60 -c</code></strong>: Muestra quien escribio el codigo con informacion de la linea 35 a la 60, EJ: <code class="highlighter-rouge">git blame css/estilos.css -L 35, 60 -c</code></li>
  <li><strong><code class="highlighter-rouge">git branch -r</code></strong>: Muestra las Ramas remotas de GitHub</li>
  <li><strong><code class="highlighter-rouge">git branch -a</code></strong>: Muestra todas las Ramas del repo y remotas de GitHub</li>
</ul>

<h2 id="estados-del-archivos">Estados del archivos</h2>

<p>Untracked  -&gt; staging  -&gt; repository local -&gt; remote</p>

<h2 id="migrar-repositorio">Migrar repositorio</h2>
<p>Mover contenido de repositorio Git a otro repositorio conservando el Historia</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone 
<span class="nb">cd </span>go-directore
git branch <span class="nt">-a</span> // To see a list of the different branches
git branch <span class="nt">-r</span> | <span class="nb">grep</span> <span class="nt">-v</span> <span class="s1">'\-&gt;'</span> | <span class="k">while </span><span class="nb">read </span>remote<span class="p">;</span> <span class="k">do </span>git branch <span class="nt">--track</span> <span class="s2">"</span><span class="k">${</span><span class="nv">remote</span><span class="p">#origin/</span><span class="k">}</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$remote</span><span class="s2">"</span><span class="p">;</span> <span class="k">done
</span>git fetch <span class="nt">--all</span>
git pull <span class="nt">--all</span>
git remote <span class="nb">rm </span>origin
git remote add origin &lt;url to NEW repo&gt;
git push origin <span class="nt">--all</span>
git push <span class="nt">--tags</span>

</code></pre></div></div>

<h2 id="more-command">More Command</h2>

<ol>
  <li><strong>git log ‚Äìoneline</strong> -&gt;Te muestra el id commit y el t√≠tulo del commit.</li>
  <li><strong>git log ‚Äìdecorate</strong> -&gt; Te muestra donde se encuentra el head point en el log.</li>
  <li><strong>git log ‚Äìstat</strong> -&gt; Explica el n√∫mero de l√≠neas que se cambiaron brevemente.</li>
  <li><strong>git log -p</strong> -&gt; Explica el n√∫mero de l√≠neas que se cambiaron y te muestra que se cambi√≥ en el contenido.</li>
  <li><strong>git shortlog</strong> -&gt; Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.</li>
  <li><strong>git log ‚Äìgraph ‚Äìoneline ‚Äìdecorate</strong></li>
  <li><strong>git log ‚Äìpretty=format:‚Äù%cn hizo un commit %h el dia %cd‚Äù</strong> - Muestra mensajes personalizados de los commits.</li>
  <li><strong>git log -3</strong> -&gt; Limitamos el n√∫mero de commits.</li>
  <li><strong>git log ‚Äìafter=‚Äú2018-1-2‚Äù</strong></li>
  <li><strong>git log ‚Äìafter=‚Äútoday‚Äù</strong></li>
  <li><strong>git log ‚Äìafter=‚Äú2018-1-2‚Äù ‚Äìbefore=‚Äútoday‚Äù</strong> -&gt; Commits para localizar por fechas.</li>
  <li><strong>git log ‚Äìauthor=‚ÄúName Author‚Äù</strong> - Commits realizados por autor que cumplan exactamente con el nombre.</li>
  <li><strong>git log ‚Äìgrep=‚ÄúINVIE‚Äù</strong> - Busca los commits que cumplan tal cual est√° escrito entre las comillas.</li>
  <li><strong>git log ‚Äì index.html</strong> -&gt; Busca los commits en un archivo en espec√≠fico.</li>
  <li><strong>git log -S ‚ÄúPor contenido‚Äù</strong> -&gt; Buscar los commits con el contenido dentro del archivo.</li>
  <li><strong>git log &gt; log.txt</strong> -&gt; guardar los logs en un archivo txt</li>
</ol>

<h2 id="referencias">Referencias</h2>

<ul>
  <li>https://platzi.com/clases/git-github/</li>
  <li>https://ndpsoftware.com/git-cheatsheet.html#loc=remote_repo</li>
</ul>
:ET